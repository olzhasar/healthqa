"""create_at modified_at - not nullable

Revision ID: f2fa9c653f7b
Revises: e031a335c70a
Create Date: 2021-07-18 19:30:52.101401

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f2fa9c653f7b'
down_revision = 'e031a335c70a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('answers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('answers', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('comments', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('questions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('questions', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('questions', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('questions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('comments', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('comments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('answers', 'modified_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('answers', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###
